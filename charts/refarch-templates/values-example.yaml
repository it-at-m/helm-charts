cacertsVolume: &cacertsVolume
  - name: cacerts-volume
    secret:
      defaultMode: 420
      secretName: cacerts-lhm
      items:
        - key: cacerts-lhm
          path: cacerts
cacertsVolumeMount: &cacertsVolumeMount
  - mountPath: /etc/pki/ca-trust/extracted/java
    name: cacerts-volume
    readOnly: true

# Global configuration
secrets:
  - name: sso
    keys:
      - URL # e.g. https://sso.example.com
      - REALM
      - CLIENTID
      - CLIENTSECRET
  - name: db
    keys:
      - URL # e.g. jdbc:postgresql://db.example.com:5432/mydb
      - USERNAME
      - PASSWORD

# Module-specific configuration
modules:
  - name: frontend
    image:
      repository: ghcr.io/it-at-m/refarch-templates/refarch-frontend
      tag: "latest"
    service:
      http: true
  - name: webcomponent
    image:
      repository: ghcr.io/it-at-m/refarch-templates/refarch-webcomponent
      tag: "latest"
    service:
      http: true
  - name: backend
    image:
      repository: ghcr.io/it-at-m/refarch-templates/refarch-backend
      tag: "latest"
    envFrom:
      - prefix: SSO_
        secretRef:
          name: sso
      - prefix: SPRING_DATASOURCE_
        secretRef:
          name: db
    env:
      - name: SECURITY_LOGGINGMODE
        value: "all"
      # mappings, normally don't have to be changed
      - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWKSETURI
        value: "${SSO_URL}/auth/realms/${SSO_REALM}/protocol/openid-connect/certs"
      - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_AUDIENCES_0
        value: "${SSO_CLIENTID}"
      - name: SECURITY_USERINFOURI
        value: "${SSO_URL}/auth/realms/${SSO_REALM}/protocol/openid-connect/userinfo"
    service:
      http: true
    volumes:
      *cacertsVolume
    volumeMounts:
      *cacertsVolumeMount
  - name: eai
    image:
      repository: ghcr.io/it-at-m/refarch-templates/refarch-eai
      tag: "latest"
    service:
      http: true
    volumes:
      *cacertsVolume
    volumeMounts:
      *cacertsVolumeMount
