# Default values for pentaho-carte.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/it-at-m/pentaho-carte
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  #    - host: chart-example.local
  #      paths:
  #        - path: /
  #          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

route:
  enabled: false
  annotations: {}
  host: ""
  path: ""
  wildcardPolicy: "None"
#  tls:
#    termination: "Edge"
#    insecureEdgeTerminationPolicy: "Redirect"
#    key: ""
#    certificate: ""
#    caCertificate: ""
#    destinationCACertificate: ""

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1000m
    memory: 2048Mi
  requests:
    cpu: 100m
    memory: 1024Mi

  livenessProbe:
    httpGet:
      path: /
      port: http
      httpHeaders:
        - name: Authorization
          value: Basic Y2x1c3RlcjpjbHVzdGVy
  readinessProbe:
    httpGet:
      path: /
      port: http
      httpHeaders:
        - name: Authorization
          value: Basic Y2x1c3RlcjpjbHVzdGVy

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

extraEnvVars: []
#  - name: "TZ"
#    value: "Europe/Berlin"

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# can be used to add init containers
initContainers:
  []
  # - name: my-init-container-name
  #   image: some-image:latest
  #   env:
  #     - name: AWS_DEFAULT_REGION
  #       value: "eu-central-1"
  #   volumeMounts:
  #     - name: help-zammad
  #       mountPath: /opt/zammad
