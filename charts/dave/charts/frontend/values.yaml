# Default values for dave-frontend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/it-at-m/dave-frontend
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "main-ls2"

imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

deploymentAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: service
  - port: 5701
    targetPort: 5701
    protocol: TCP
    name: hazelcast

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

extraEnvVars:
#  - name: "TZ"
#    value: "Europe/Berlin"

extraVolumeMounts:
  []
  # - name: secret-truststore
  #   readOnly: true
  #   mountPath: /mnt
extraVolumes:
  []
  # - name: secret-truststore
  #   secret:
  #     secretName: custom-cacerts
  #     defaultMode: 420

# can be used to add init containers
initContainers:
  []
  # - name: my-init-container-name
  #   image: some-image:latest
  #   env:
  #     - name: AWS_DEFAULT_REGION
  #       value: "eu-central-1"
  #   volumeMounts:
  #     - name: help-zammad
  #       mountPath: /opt/zammad

credentials:
  # secret must contain keys USER_DN and PASSWORD for ldap authentication
  existingSecret: ""

route:
  enabled: false
  annotations: {}
  host: ""
  path: ""
  wildcardPolicy: "None"
  tls:
    termination: "Edge"
    insecureEdgeTerminationPolicy: "Redirect"
    key: ""
    certificate: ""
    caCertificate: ""
    destinationCACertificate: ""
  targetPort: ""

serviceMonitor:
  enabled: false

applicationYML:
  daveFrontend:
    #ldap:
    #  url: ldap://ldap.example.org:389
    #  user-search-base: ou=users,dc=example,dc=org
    #  ou-search-base: ou=orga,dc=example,dc=org
    cors:
      enabled: false
      # allowed-origin-patterns:
      #   - https://*.example.org:[*]
      #   - http://localhost:[*]
    cache:
      enabled: false
      # disk:
      #   dir: /deployments/cache
  app:
    auth-mode: none
  # logging:
  #   level:
  #     "[de.muenchen.oss.ezldap]": DEBUG
