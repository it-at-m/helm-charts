apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "daveBackend.fullname" . }}
  labels:
    {{- include "daveBackend.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "daveBackend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "daveBackend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dave.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: config
          configMap:
            {{- if .Values.existingConfigMap }}
            name: {{ .Values.existingConfigMap }}
            {{- else }}
            name: {{ include "daveBackend.fullname" . }}
            {{- end }}
            defaultMode: 420
        - name: elasticsearch-tls-cert-fingerprint
          emptyDir: {}
        - name: elasticsearch-tls-cert
          secret:
            secretName: dave-elasticsearch-master-crt
            items:
            - key: tls.crt
              path: "elasticsearch-tls.crt"
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: create-elasticsearch-http-ca-certificate
          image:  dockerhub.muenchen.de/bitnamilegacy/elasticsearch:8.12.0-debian-11-r1
          command: ['sh', '-c', 'openssl x509 -fingerprint -sha256 -nocert -in /tmp/es-certs/elasticsearch-tls.crt | cut -d= -f2 > /tmp/es-fingerprint/es-fp.txt']
          volumeMounts:
            - name: elasticsearch-tls-cert
              mountPath: "/tmp/es-certs/"
              readOnly: true
            - name: elasticsearch-tls-cert-fingerprint
              mountPath: /tmp/es-fingerprint/
        {{- with .Values.initContainers }}
        {{- toYaml . | nindent 8}}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          #  - name: LC_ALL
          #    value: C.utf8
          {{- with .Values.global.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
          {{- end}}
          {{- with .Values.extraEnvVarsSources }}
            {{- toYaml . | nindent 12 }}
          {{- end}}
          envFrom:
            - configMapRef:
                name: {{ include "daveBackend.fullname" . }}
            - configMapRef:
                name: {{ include "daveBackend.fullname" . }}-email
            - secretRef:
                name: {{ include "daveBackend.fullname" . }}-secret
          ports:
            {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: {{ .protocol }}  
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /deployments/config
            - name: elasticsearch-tls-cert-fingerprint
              mountPath: /tmp/es-fingerprint/
          {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
#          livenessProbe:
#            httpGet:
#              path: /actuator/health/liveness
#              port: http
#            initialDelaySeconds: 60
#            timeoutSeconds: 15
#            periodSeconds: 10
#            successThreshold: 1
#            failureThreshold: 5
#          readinessProbe:
#            httpGet:
#              path: /actuator/health/readiness
#              port: http
#            initialDelaySeconds: 10
#            timeoutSeconds: 5
#            periodSeconds: 5
#            successThreshold: 1
#            failureThreshold: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
