# Default values for dave.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global values
global:
  fullnameOverride: "dave"
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  extraEnvVars:
    # Spring session timout in seconds; Goal: same lifetime as SSO Session (e.g. 10 hours)
    - name: "SPRING_SESSION_TIMEOUT"
      value: "3600"

externalCharts:
  elasticsearch:
    # enable/disable elasticsearch chart dependency
    enabled: true
  postgresql:
    # enable/disable postgresql chart dependency
    enabled: true
  keycloak:
    # enable/disable keycloak chart dependency
    enabled: true

# Dave Backend
backend:
  replicaCount: 1
  fullnameOverride: dave-backend-service
  # Environment Variables
  extraEnvVars:
    env:
      # DB
      # [By default such tables (and other objects) are automatically put into a schema named “public”. Every new database contains such a schema](https://www.postgresql.org/docs/current/ddl-schemas.html#DDL-SCHEMAS-PUBLIC).
      DB_SCHEMA: public
      # Hazelcast
      HAZELCAST_GROUP_NAME: dave-backend-service-hazl_group
      HAZELCAST_INSTANCE: dave-backend-service-hazl_instance
      HAZELCAST_OPENSHIFT_SERVICE_NAME: dave-backend-service
      # Java
      JAVA_OPTS_APPEND: -Dfile.encoding=UTF-8 -Dhz.integritychecker.enabled=false
      # Other
      GC_MAX_METASPACE_SIZE: "256"
      SERVER_PORT: "8080"
      TOMCAT_GRACEFULSHUTDOWN_PRE_WAIT_SECONDS: "40"
      GEODATEN_EAI_URL: "http://localhost:8088"
      # Spring, Keycloak
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATA_REST_MAX-PAGE-SIZE: "0x7fffffff"
      SPRING_DATA_REST_DEFAULT-PAGE-SIZE: "0x7fffffff"
      SPRING_DATA_REST_RETURN-ON-BODY-UPDATE: "true"
      SPRING_DATA_REST_RETURN-ON-BODY-CREATE: "true"
      SPRING_DATASOURCE_DRIVER-CLASS-NAME: org.postgresql.Driver
      SPRING_DATASOURCE_URL: jdbc:postgresql://dave-postgresql:5432/dave_db
      SPRING_DATASOURCE_USERNAME: dave
      SPRING_JPA_DATABASE: postgresql
      SPRING_JPA_HIBERNATE_DDL-AUTO: update
      SPRING_JPA_HIBERNATE_NAMING.PHYSICAL-STRATEGY: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      SPRING_JPA_SHOW-SQL: "false"
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
      SPRING_SECURITY_LOGGING.REQUESTS: all
      SPRING_SECURITY_OAUTH2_RESOURCE_USER-INFO-URI: ${keycloak.auth-server-url}/realms/${realm}/protocol/openid-connect/userinfo
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI: ${keycloak.auth-server-url}/realms/${realm}
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: ${keycloak.auth-server-url}/realms/${realm}/protocol/openid-connect/certs
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_TOKEN_URI: ${keycloak.auth-server-url}/realms/${realm}/protocol/openid-connect/token
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT-ID: dave
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT-SECRET: TBD
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_AUTHORIZATION-GRANT-TYPE: client_credentials
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT-AUTHENTICATION-METHOD: client_secret_post
      # SPRING_FLYWAY_BASELINE-ON-MIGRATE and SPRING_FLYWAY_BASELINE-VERSION have to be set on initial startup
      # to create flyway table in database, can be commented out after initial startup.
      SPRING_FLYWAY_BASELINE-ON-MIGRATE: "true"
      SPRING_FLYWAY_BASELINE-VERSION: "1"
      REALM: Dave
      KEYCLOAK_AUTH-SERVER-URL: <Auth-Server URL>
      # Elasticsearch
      ELASTICSEARCH_USER: elastic
      ELASTICSEARCH_PORT: "9200"
      ELASTICSEARCH_CONNECTTIMEOUT: "10"
      ELASTICSEARCH_SOCKETTIMEOUT: "30"
      ELASTICSEARCH_REINDEX: "true"
      ELASTICSEARCH_SCHEME: http
      # Dave
      DAVE_MESSSTELLE_CRON: "0 0/5 * 1/1 * ?"
      DAVE_MESSSTELLE_SHEDLOCK: "4M"
      DAVE_ZAEHLUNG_STATUSUPDATER_CRON: "0 0/10 * 1/1 * ?"
      DAVE_ZAEHLUNG_STATUSUPDATER_SHEDLOCK: "9M"
      DAVE_UNAUFFAELLIGETAGE_CRON: "0 0 4 1/1 * ?"
      DAVE_UNAUFFAELLIGETAGE_SHEDLOCK: "1380M"
      # old to remove
      DAVE_ZAEHLUNG_STATUS_UPDATER: "0 0/10 * 1/1 * ?"
    # Dave Email Settings
    email:
      DAVE_EMAIL_URL_ADMINPORTAL: "http://localhost:8085"
      DAVE_EMAIL_URL_SELFSERVICEPORTAL: "http://localhost:8086"
      DAVE_EMAIL_RECEIVER_HOSTNAME: <Hostname>
      DAVE_EMAIL_SENDER_HOSTNAME: <Hostname>
      DAVE_EMAIL_ADDRESS: <Email-Adress>
      DAVE_EMAIL_RECEIVER_CUT_EMAIL_BODY_LINE_BEGINS_WITH_STRINGS: "Von:;Gesendet:"
      DAVE_EMAIL_RECEIVER_CUT_EMAIL_BODY_LINE_CONTAINS_STRINGS: <Email Body Strings>
      DAVE_EMAIL_RECEIVER_CRON: "0 0/5 * 1/1 * ?"
      DAVE_EMAIL_RECEIVER_SHEDLOCK: "4M"
      # old to remove
      DAVE_EMAIL_RECEIVER_UPDATE-INTERVAL: "5000"
      DAVE_EMAIL_RECEIVER_UPDATE_INTERVAL: "30000"
  # Credentials
  credentials:
    SPRING_DATASOURCE_PASSWORD: dave_pwd
    DAVE_EMAIL_PASSWORD: <Email-Password>
    ELASTICSEARCH_HOST: dave-elasticsearch
    ELASTICSEARCH_PASSWORD: ""
  # Environment variables from other secrets/config maps
  extraEnvVarsSources: []
  # Volume for CA-Certfificates
  extraVolumeMounts: []
  extraVolumes: []

# Dave Admin-Portal
admin-portal:
  replicaCount: 1
  fullnameOverride: dave-adminportal-apigateway-service
  # Environment variables
  extraEnvVars:
    # Hazelcast
    HAZELCAST_GROUP_NAME: dave-adminportal-apigateway-service-session_replication_group
    HAZELCAST_INSTANCE: dave-adminportal-apigateway-service-hazl_instance
    HAZELCAST_OPENSHIFT_SERVICE_NAME: dave-adminportal-apigateway-service
    # Java
    JAVA_OPTS_APPEND: -Dfile.encoding=UTF-8 -Dhz.integritychecker.enabled=false
    # Other
    SERVER_PORT: "8080"
    # Spring, Keycloak
    SPRING_PROFILES_ACTIVE: dev
    SPRING_REALM: Dave
    SPRING_CLOUD_GATEWAY_ACTUATOR_VERBOSE_ENABLED: "false"
    SPRING_CLOUD_GATEWAY_ROUTES_0_ID: sso
    SPRING_CLOUD_GATEWAY_ROUTES_0_URI: <SSO URI>
    SPRING_CLOUD_GATEWAY_ROUTES_0_PREDICATES_0: Path=/api/sso/userinfo
    SPRING_CLOUD_GATEWAY_ROUTES_0_FILTERS_0: RewritePath=/api/sso/userinfo, /auth/realms/${spring.realm}/protocol/openid-connect/userinfo
    SPRING_CLOUD_GATEWAY_ROUTES_1_ID: backend
    SPRING_CLOUD_GATEWAY_ROUTES_1_URI: http://dave-backend-service:8080/
    SPRING_CLOUD_GATEWAY_ROUTES_1_PREDICATES_0: Path=/api/dave-backend-service/**
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_NAME: Retry
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_RETRIES: "2"
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_METHODS: GET
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_BACKOFF_FIRSTBACKOFF: 10ms
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_BACKOFF_MAXBACKOFF: 50ms
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_BACKOFF_FACTOR: "2"
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_BACKOFF_BASEDONPREVIOUSVALUE: "false"
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_1: RewritePath=/api/dave-backend-service/(?<urlsegments>.*), /$\{urlsegments}
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_2: RemoveResponseHeader=WWW-Authenticate
    SPRING_CLOUD_GATEWAY_DEFAULT-FILTERS_0: RemoveResponseHeader=Expires
    SPRING_CLOUD_GATEWAY_DEFAULT-FILTERS_1: RemoveRequestHeader=cookie
    SPRING_CLOUD_GATEWAY_DEFAULT-FILTERS_2: RemoveRequestHeader=x-xsrf-token
    SPRING_CLOUD_GATEWAY_DEFAULT-FILTERS_3: TokenRelay=
    SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER-URI: <ISSUER-URI>
    SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT-ID: dave
    SPRING_MVC_LOG-REQUEST-DETAILS: "on"
  # Volume for CA-Certfificates
  extraVolumeMounts: []
  extraVolumes: []
  # Ingress
  service:
    port: 8080

# Dave EAI
eai:
  replicaCount: 1
  fullnameOverride: dave-eai-service
  # Environment variables
  extraEnvVars:
    # Java
    JAVA_OPTS_APPEND: -Dfile.encoding=UTF-8
    # Other
    GC_MAX_METASPACE_SIZE: "256"
    BACKEND_URI: dave-backend-service:8080
    MANAGEMENT_SERVER_PORT: "8079"
    SERVER_PORT: "8080"
    SPRING_PROFILES_ACTIVE: dev
  # Volume for CA-Certfificates
  extraVolumeMounts: []
  extraVolumes: []

# Dave Frontend
frontend:
  replicaCount: 1
  fullnameOverride: dave-frontend-apigateway-service
  # Environment variables
  extraEnvVars:
    # Hazelcast
    HAZELCAST_GROUP_NAME: dave-frontend-apigateway-service-session_replication_group
    HAZELCAST_INSTANCE: dave-frontend-apigateway-service-hazl_instance
    HAZELCAST_OPENSHIFT_SERVICE_NAME: dave-frontend-apigateway-service
    # Java
    JAVA_OPTS_APPEND: -Dfile.encoding=UTF-8
    # Other
    SERVER_PORT: "8080"
    # Spring, Keycloak
    SPRING_PROFILES_ACTIVE: dev
    SPRING_REALM: Dave
    SPRING_CLOUD_GATEWAY_ACTUATOR_VERBOSE_ENABLED: "false"
    SPRING_CLOUD_GATEWAY_ROUTES_0_ID: sso
    SPRING_CLOUD_GATEWAY_ROUTES_0_URI: <SSO URI>
    SPRING_CLOUD_GATEWAY_ROUTES_0_PREDICATES_0: Path=/api/sso/userinfo
    SPRING_CLOUD_GATEWAY_ROUTES_0_FILTERS_0: RewritePath=/api/sso/userinfo, /auth/realms/${spring.realm}/protocol/openid-connect/userinfo
    SPRING_CLOUD_GATEWAY_ROUTES_1_ID: backend
    SPRING_CLOUD_GATEWAY_ROUTES_1_URI: http://dave-backend-service:8080/
    SPRING_CLOUD_GATEWAY_ROUTES_1_PREDICATES_0: Path=/api/dave-backend-service/**
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_NAME: Retry
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_RETRIES: "2"
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_METHODS: GET,POST
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_BACKOFF_FIRSTBACKOFF: 10ms
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_BACKOFF_MAXBACKOFF: 50ms
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_BACKOFF_FACTOR: "2"
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_BACKOFF_BASEDONPREVIOUSVALUE: "false"
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_1: RewritePath=/api/dave-backend-service/(?<urlsegments>.*), /$\{urlsegments}
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_2: RemoveResponseHeader=WWW-Authenticate
    SPRING_CLOUD_GATEWAY_ROUTES_2_ID: eai
    SPRING_CLOUD_GATEWAY_ROUTES_2_URI: http://dave-eai-service:8080/
    SPRING_CLOUD_GATEWAY_ROUTES_2_PREDICATES_0: Path=/api/dave-eai-service/**
    SPRING_CLOUD_GATEWAY_ROUTES_2_METADATA_RESPONSE-TIMEOUT: "1800000"
    SPRING_CLOUD_GATEWAY_ROUTES_2_FILTERS_0: RewritePath=/api/dave-eai-service/(?<urlsegments>.*), /$\{urlsegments}
    SPRING_CLOUD_GATEWAY_ROUTES_2_FILTERS_1: RemoveResponseHeader=WWW-Authenticate
    SPRING_CLOUD_GATEWAY_DEFAULT-FILTERS_0: RemoveResponseHeader=Expires
    SPRING_CLOUD_GATEWAY_DEFAULT-FILTERS_1: RemoveRequestHeader=cookie
    SPRING_CLOUD_GATEWAY_DEFAULT-FILTERS_2: RemoveRequestHeader=x-xsrf-token
    SPRING_CLOUD_GATEWAY_DEFAULT-FILTERS_3: TokenRelay=
    SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER-URI: <ISSUER-URI>
    SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT-ID: dave
    SPRING_MVC_LOG-REQUEST-DETAILS: "on"
  # Volume for CA-Certfificates
  extraVolumeMounts: []
  extraVolumes: []
  # Ingress
  service:
    port: 8080

# Dave Selfservice-Portal
selfservice-portal:
  replicaCount: 1
  fullnameOverride: dave-selfserviceportal-apigateway-service
  extraEnvVars:
    # Hazelcast
    HAZELCAST_GROUP_NAME: dave-selfserviceportal-apigateway-service-session_replication_group
    HAZELCAST_INSTANCE: dave-selfserviceportal-apigateway-service-hazl_instance
    HAZELCAST_OPENSHIFT_SERVICE_NAME: dave-selfserviceportal-apigateway-service
    # Java
    JAVA_OPTS_APPEND: -Dfile.encoding=UTF-8
    # Other
    SERVER_PORT: "8080"
    # Spring, Keycloak
    SPRING_PROFILES_ACTIVE: dev
    SPRING_REALM: Dave
    SPRING_CLOUD_GATEWAY_ACTUATOR_VERBOSE_ENABLED: "false"
    SPRING_CLOUD_GATEWAY_ROUTES_0_ID: sso
    SPRING_CLOUD_GATEWAY_ROUTES_0_URI: <SSO URI>
    SPRING_CLOUD_GATEWAY_ROUTES_0_PREDICATES_0: Path=/api/sso/userinfo
    SPRING_CLOUD_GATEWAY_ROUTES_0_FILTERS_0: RewritePath=/api/sso/userinfo, /auth/realms/${spring.realm}/protocol/openid-connect/userinfo
    SPRING_CLOUD_GATEWAY_ROUTES_1_ID: backend
    SPRING_CLOUD_GATEWAY_ROUTES_1_URI: http://dave-backend-service:8080/
    SPRING_CLOUD_GATEWAY_ROUTES_1_PREDICATES_0: Path=/api/dave-backend-service/**
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_NAME: Retry
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_RETRIES: "2"
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_METHODS: GET
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_BACKOFF_FIRSTBACKOFF: 10ms
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_BACKOFF_MAXBACKOFF: 50ms
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_BACKOFF_FACTOR: "2"
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_0_ARGS_BACKOFF_BASEDONPREVIOUSVALUE: "false"
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_1: RewritePath=/api/dave-backend-service/(?<urlsegments>.*), /$\{urlsegments}
    SPRING_CLOUD_GATEWAY_ROUTES_1_FILTERS_2: RemoveResponseHeader=WWW-Authenticate
    SPRING_CLOUD_GATEWAY_DEFAULT-FILTERS_0: RemoveResponseHeader=Expires
    SPRING_CLOUD_GATEWAY_DEFAULT-FILTERS_1: RemoveRequestHeader=cookie
    SPRING_CLOUD_GATEWAY_DEFAULT-FILTERS_2: RemoveRequestHeader=x-xsrf-token
    SPRING_CLOUD_GATEWAY_DEFAULT-FILTERS_3: TokenRelay=
    SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER-URI: <ISSUER-URI>
    SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT-ID: dave
    SPRING_MVC_LOG-REQUEST-DETAILS: "on"
  # Volume for CA-Certfificates
  extraVolumeMounts: []
  extraVolumes: []
  # Ingress
  service:
    port: 8080

# Elasticsearch
# https://github.com/bitnami/charts/tree/main/bitnami/elasticsearch
elasticsearch:
  clusterName: dave
  sysctlImage:
    enabled: false
  coordinating:
    replicaCount: 0
  data:
    replicaCount: 0
  ingest:
    replicaCount: 0
  master:
    heapSize: 512m
    masterOnly: false
    replicaCount: 1
    resources:
      limits:
        cpu: 2
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 1Gi
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false

# PostgreSQL
# https://github.com/bitnami/charts/tree/main/bitnami/postgresql
postgresql:
  auth:
    username: dave
    password: dave_pwd
    database: dave_db
  primary:
    containerSecurityContext:
      enabled: false
    podSecurityContext:
      enabled: false

# Keycloak
# https://github.com/bitnami/charts/tree/bitnami/keycloak
keycloak:
  postgresql:
    nameOverride: keycloak-postgresql

  keycloakConfigCli:
    enabled: true
    initContainers: |
      - name: fetch-config
        image: {{ include "common.images.image" (dict "imageRoot" (dict "repository" "bitnami/os-shell" "tag" "latest") "global" .Values.global) }}
        command:
          - /bin/sh
          - -c
          - |
            curl -L https://github.com/it-at-m/dave-backend/raw/refs/heads/sprint/sso-config/sso-client.json |
              jq '{"clients": [.], "enabled": true, "realm": "Dave", "displayName": "DAVe"}' > /config/sso.json
        volumeMounts:
          - name: config-volume
            mountPath: /config
        securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.keycloakConfigCli.containerSecurityContext "context" $) | nindent 4 }}
    extraVolumes:
      - name: config-volume
        emptyDir:
          sizeLimit: 10Mi
    extraVolumeMounts:
      - name: config-volume
        mountPath: /config
    extraEnvVars:
      - name: IMPORT_FILES_LOCATIONS
        value: /config/*
