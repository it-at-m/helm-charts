# Default specific values for dave.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global values
global:
  credentials:
    SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT-SECRET: WFhYWC1TRUNSRVQtWFhYWAo=

# Dave Backend
backend:
  # Environment Variables
  extraEnvVars:
    env:
      JAVA_OPTIONS:
        -Djavax.net.ssl.trustStore=/mnt/cacerts -Djavax.net.ssl.trustStorePassword=changeit
        -Xmx1g --add-modules java.se --add-exports java.base/jdk.internal.ref=ALL-UNNAMED
        --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED
        --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.management/sun.management=ALL-UNNAMED
        --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED"
      KEYCLOAK_AUTH-SERVER-URL: http://dave-keycloak/auth
      SPRING_PROFILES_ACTIVE: no-security
    # Dave Email Settings
    email:
      DAVE_EMAIL_RECEIVER_HOSTNAME: imap.example.com
      DAVE_EMAIL_ADDRESS: dave-dev@example.com
      DAVE_EMAIL_RECEIVER_CUT_EMAIL_BODY_LINE_CONTAINS_STRINGS: Example City;-----UrsprÃ¼ngliche Nachricht-----;dave-dev@example.com,
  # Credentials
  credentials:
    DAVE_EMAIL_PASSWORD: WFhYWC1TRUNSRVQtWFhYWAo=
  # Volume for CA-Certfificates
  # extraVolumeMounts:
  #   - name: cacerts
  #     readOnly: true
  #     mountPath: /mnt
  # extraVolumes:
  #   - name: cacerts
  #     secret:
  #       secretName: cacerts
  #       defaultMode: 420

# Dave Admin-Portal
admin-portal:
  # Environment variables
  extraEnvVars:
    JAVA_OPTIONS:
      -Djavax.net.ssl.trustStore=/mnt/cacerts -Djavax.net.ssl.trustStorePassword=changeit
      --add-modules java.se --add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-opens
      java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-opens
      java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.management/sun.management=ALL-UNNAMED
      --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED
    SPRING_CLOUD_GATEWAY_ROUTES_0_URI: http://dave-keycloak/
    SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER-URI: http://dave-keycloak/realms/${spring.realm}
  # Volume for CA-Certfificates
  # extraVolumeMounts:
  #   - name: cacerts
  #     readOnly: true
  #     mountPath: /mnt
  # extraVolumes:
  #   - name: cacerts
  #     secret:
  #       secretName: cacerts
  #       defaultMode: 420
  ingress:
    enabled: true
    className: ""
    hosts:
      - host: dave-admin-portal.example.de
        paths:
          - path: /
            pathType: ImplementationSpecific

# Dave EAI
eai:
  # Environment variables
  extraEnvVars:
    JAVA_OPTIONS: -Djavax.net.ssl.trustStore=/mnt/cacerts -Djavax.net.ssl.trustStorePassword=changeit -Xmx512m
  # Volume for CA-Certfificates
  # extraVolumeMounts:
  #   - name: cacerts
  #     readOnly: true
  #     mountPath: /mnt
  # extraVolumes:
  #   - name: cacerts
  #     secret:
  #       secretName: cacerts
  #       defaultMode: 420

# Dave Frontend
frontend:
  # Environment variables
  extraEnvVars:
    JAVA_OPTIONS:
      -Djavax.net.ssl.trustStore=/mnt/cacerts -Djavax.net.ssl.trustStorePassword=changeit
      --add-modules java.se --add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-opens
      java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-opens
      java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.management/sun.management=ALL-UNNAMED
      --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED
    SPRING_CLOUD_GATEWAY_ROUTES_0_URI: http://dave-keycloak/
    SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER-URI: http://dave-keycloak/realms/${spring.realm}
  # Volume for CA-Certfificates
  # extraVolumeMounts:
  #   - name: cacerts
  #     readOnly: true
  #     mountPath: /mnt
  # extraVolumes:
  #   - name: cacerts
  #     secret:
  #       secretName: cacerts
  #       defaultMode: 420
  ingress:
    enabled: true
    className: ""
    hosts:
      - host: dave.example.de
        paths:
          - path: /
            pathType: ImplementationSpecific

# Dave Selfservice-Portal
selfservice-portal:
  # Environment variables
  extraEnvVars:
    JAVA_OPTIONS:
      -Djavax.net.ssl.trustStore=/mnt/cacerts -Djavax.net.ssl.trustStorePassword=changeit
      --add-modules java.se --add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-opens
      java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-opens
      java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.management/sun.management=ALL-UNNAMED
      --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED
    SPRING_CLOUD_GATEWAY_ROUTES_0_URI: http://dave-keycloak/
    SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER-URI: http://dave-keycloak/realms/${spring.realm}
  # Volume for CA-Certfificates
  # extraVolumeMounts:
  #   - name: cacerts
  #     readOnly: true
  #     mountPath: /mnt
  # extraVolumes:
  #   - name: cacerts
  #     secret:
  #       secretName: cacerts
  #       defaultMode: 420
  ingress:
    enabled: true
    className: ""
    hosts:
      - host: dave-selfservice-portal.example.de
        paths:
          - path: /
            pathType: ImplementationSpecific

keycloak:
  fullnameOverride: "dave-keycloak"
  # supply realm / client configuration using init-container and "--import-realm" (see https://artifacthub.io/packages/helm/bitnami/keycloak#importing-a-realm )
  initContainers: |
    - name: fetch-config
      image: {{ include "common.images.image" (dict "imageRoot" (dict "repository" "bitnami/os-shell" "tag" "latest") "global" .Values.global) }}
      command:
        - /bin/sh
        - -c
        - |
          curl -L https://github.com/it-at-m/dave-backend/raw/refs/heads/sprint/sso-config/sso-client.json |
            jq '{"clients": [.], "enabled": true, "realm": "Dave", "displayName": "DAVe"}' > /realm-config/sso.json
      volumeMounts:
        - name: config-volume
          mountPath: /realm-config
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 4 }}
  extraVolumes:
    - name: config-volume
      emptyDir:
        sizeLimit: 10Mi
  extraVolumeMounts:
    - name: config-volume
      mountPath: /opt/bitnami/keycloak/data/import
  extraEnvVars:
    - name: KEYCLOAK_EXTRA_ARGS
      value: --import-realm
