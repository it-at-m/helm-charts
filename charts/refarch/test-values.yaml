modules:
  - name: luluulul
    image:
      repository: ghcr.io/it-at-m/sps/sps-frontend
      # pullPolicy: Always # Defaults to IfNotPresent
      tag: "latest" # Defaults to AppVersion of Chart.yaml
    applicationYML:
      ENV_VARIABLE: someValue # alternative to env.value
      spring:
        profiles:
          active: "myprofile"
    env:
      # static
      - name: STATIC_ENV_EXAMPLE
        value: someStaticValue
      # single reference dynamic
      - name: SECRET_ENV_EXAMPLE
        valueFrom:
          secretKeyRef:
            key: sps-sample-dev # secret-name
            name: sso-client-id
      - name: SECRET_ENV_EXAMPLE
        valueFrom:
          configMapKeyRef:
            key: sps-sample-dev # secret-name
            name: sso-client-id
    envFrom:
      # whole files of envs
      - configMapRef:
          name: nameOfConfigMap
      - secretRef:
          name: nameOfConfigMap

    ### NETWORKING
    service:
      #type: NodePort   # defaults to ClusterIP
      http: true # adds default http port mapping
      javaDebug: true   # adds default java debug port mapping
      ports:
        - name: myport
          protocol: TCP
          port: 8888
          targetPort: http
    # ingress:
    #   # port: 1234    # defaults to 8080
    #   className: ""
    #   # annotations:
    #   #   kubernetes.io/ingress.class: nginx
    #   #   kubernetes.io/tls-acme: "true"
    #   hosts:
    #     - host: chart-example.local
    #       paths:
    #         - path: /
    #           pathType: ImplementationSpecific
    #   # tls:
    #   #  - secretName: chart-example-tls
    #   #    hosts:
    #   #      - chart-example.local

    ### STORAGE
    volumes:
      - name: cacerts-lhm
        secret:
          defaultMode: 420
          secretName: cacerts-lhm
          items:
            - key: cacerts-lhm
              path: cacerts
    volumeMounts:
      - mountPath: /etc/pki/ca-trust/extracted/java
        name: cacerts-lhm
        readOnly: true

    ### MONITORING
    ### Does not have to be defined - defaults exist
    # startupProbe:
    #   httpGet:
    #     path: /actuator/health
    #     port: http
    #   initialDelaySeconds: 60
    # livenessProbe:
    #   httpGet:
    #     path: /actuator/health/liveness
    #     port: http
    # readinessProbe:
    #   httpGet:
    #     path: /actuator/health/readiness
    #     port: http

    ### RESOURCES & SCALING
    ### It is possible to define requests or limits individually
    # resources:
    #   requests:
    #     cpu: 100m
    #     memory: 512Mi
    #   limits:
    #     cpu: 500m
    #     memory: 512Mi
    # replicas: 2 # defaults to 1
    # autoscaling:
    #   minReplicas: 1
    #   maxReplicas: 10
    #   targetCPUUtilizationPercentage: 80
    #   targetMemoryUtilizationPercentage: 80

    ### TODO - check below
    # imagePullSecrets: [ ]

    ### SECURITY
    securityContext: # TODO - maybe default
      # Security-Settings recommended from https://github.com/Checkmarx/kics
      capabilities:
        drop:
          - ALL
      # readOnlyRootFilesystem: true
      runAsNonRoot: true
      # runAsUser: 1000
    # serviceAccount:
    #   # Specifies whether a service account should be created
    #   create: true
    #   # Automatically mount a ServiceAccount's API credentials?
    #   automount: true
    #   # Annotations to add to the service account
    #   annotations: { }
    #   # The name of the service account to use.
    #   # If not set and create is true, a name is generated using the fullname template
    #   name: ""

